---
- name: install specificed icinga version
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  loop:
    - "{{ icinga_package }}"

- name: copy icinga configuration files
  ansible.builtin.template:
    src: "{{ item.src_file }}"
    dest: "{{ item.dest_file }}"
    owner: icinga
    group: icinga
    mode: 0640
  loop:
    - { src_file: "{{ icinga_zone_config_file }}", dest_file: "/etc/icinga2/zones.conf" }
    - { src_file: "{{ icinga_constants_config_file }}", dest_file: "/etc/icinga2/constants.conf" }
    - { src_file: "{{ icinga_api_config_file }}", dest_file: "/etc/icinga2/features-available/api.conf" }
    - { src_file: "{{ icinga_config_file }}", dest_file: "/etc/icinga2/icinga2.conf" }
  notify:
    - restart icinga2

- name: copy icinga feature files
  ansible.builtin.template:
    src: "{{ item.src_file }}"
    dest: "{{ item.dest_file }}"
    owner: icinga
    group: icinga
    mode: 0640
  loop:
    - { src_file: "{{ icinga_api_config_file }}", dest_file: "/etc/icinga2/features-available/api.conf" }
  notify:
    - restart icinga2

- name: copy custom icinga feature files


- name: activate specified icinga features
  ansible.builtin.file:
    src: "../features-available/{{ item }}"
    dest: "/etc/icinga2/features-enabled/{{ item }}"
    state: link
  loop:
    - "{{ icinga_enable_features }}"
  when:
    - icinga_enable_features is defined
    - icinga_enable_features | length > 0

- block:
    - name: generate ticket and save it as a variable
      ansible.builtin.shell: /usr/sbin/icinga2 pki ticket --cn {{ ansible_hostname }} --salt {{ salt }}
      environment:
        LD_LIBRARY_PATH: "/usr/lib64"
      register: ticket

    - name: create certificate
      ansible.builtin.command: "/usr/sbin/icinga2 pki new-cert --cn {{ ansible_hostname }} --key /var/lib/icinga2/certs/{{ ansible_hostname }}.key --cert /var/lib/icinga2/certs/{{ ansible_hostname }}.crt"
      args:
        creates: "/var/lib/icinga2/certs/{{ ansible_hostname }}.crt"

    - name: save the icinga master's certificate to the host
      ansible.builtin.command: "/usr/sbin/icinga2 pki save-cert --key /var/lib/icinga2/certs/{{ ansible_hostname }}.key --cert /var/lib/icinga2/certs/{{ ansible_hostname }}.crt --trustedcert /var/lib/icinga2/certs/trusted-master.crt --host {{ icinga_ca_host }}"
      args:
        creates: "/var/lib/icinga2/certs/trusted-master.crt"

    - name: generate ticket and save it as a variable
      ansible.builtin.command: "/usr/sbin/icinga2 pki ticket --cn {{ ansible_hostname }} --salt {{ salt }}"
      register: ticket
      args:
        creates: "/var/lib/icinga2/certs/ca.crt"

    - name: send a pki request to the icinga master
      ansible.builtin.command: "/usr/sbin/icinga2 pki request --host {{ icinga_ca_host }} --port {{ icinga_ca_host_icinga_port }} --ticket {{ ticket.stdout }} --key /var/lib/icinga2/certs/{{ ansible_hostname }}.key --cert /var/lib/icinga2/certs/{{ ansible_hostname }}.crt --trustedcert /var/lib/icinga2/certs/trusted-master.crt --ca /var/lib/icinga2/certs/ca.crt"
      args:
        creates: "/var/lib/icinga2/certs/ca.crt"
      notify:
        - restart icinga2
    when:
      - icinga_agent_registration | bool
      - salt is defined
      - salt | length > 0
      - icinga_ca_host is defined
      - icinga_ca_host | length > 0

- name: enable autostart for icinga service
  ansible.builtin.service:
    name: icinga2
    enabled: true
    state: started
